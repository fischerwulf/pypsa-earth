In this section, the novelties of PyPSA-Earth methodology are highlighted and described in detail. As depicted in Fig. 1, first, we introduce the workflow management tool that supports the model user experience. Then, data creation and processing approaches are discussed considering the main data blocks used by the PyPSA-Earth model: power grid topology and spatial shapes, electricity demand, renewable potential and power plant locations. Further, we describe some advanced pre-processing techniques, such as clustering and line augmentation, used to introduce data into the model in a robust and efficient way. Finally, we describe the energy system modelling and optimization framework with its solver interfaces.
3.1. Workflow management tool
First of all, similarly to PyPSA-Eur [23], PyPSA-Earth relies on the ‘Snakemake’ workflow management [42] that decomposes a large software process into a set of subtasks, or ‘rules’, that are automatically chained to obtain the desired output. Accordingly, ‘Snakemake’ helps sustainable software design that enables reproducible, adaptable and transparent science, as described in [43]. The whole PyPSA-Earth workflow was implemented as a new set of ‘Snakemake’ rules. For more details, Figure B.13 in Appendix B represents a workflow of PyPSA-Earth automatically created by ‘Snakemake’ for which the user can execute any part of the workflow with a single line of code. That is expected to improve the user and developer experience, as complex tasks are decomposed into multiple modular smaller problems that are easier to handle and maintain.
3.2. Network topology and model
The electricity network topology is one of the main inputs needed to build an energy system model which accounts for realistic power flow approximations across regions. The most comprehensive and accurate data on power grids are curated by the transmission system operator. In practice, the availability of open power grid data is still relatively low for many parts of the world, with the situation in Africa being extremely sparse.
A natural way to address the lack of power grid data is to utilize open geospatial datasets. Currently, a few open-source packages have been published to extract and build networks from such datasets (e.g. Gridkit [44], Transnet [45], SciGrid [44]). However, each package focuses on applications for a particular world region rather than on the global coverage and there still needs to be a ready-to-use solution which could be implemented into a global model. To fill this gap, we have developed an original approach which reconstructs the network topology by relying solely on open globally-available data. The developed approach is based on the OpenStreetMap (OSM) datasets that are a crowd-sourced collection of geographic information, which is daily updated and includes geolocation Refs. [46].
The electricity network topology is created in three novel steps: (i) downloading, (ii) filtering and cleaning the data, and (iii) building a meshed network dataset with transformer, substation, converter and high voltage alternating current (HVAC) as well as high voltage direct current (HVDC) components. Figure B.14 shows sample raw and cleaned networks along with the options for clustering and line augmentation that are introduced in Sections 3.7 Spatial clustering approach, 3.8 Augmented line connection, respectively.
For the download step, the esy-osm tool is used to allow fast retrieval of OSM data through multi-threaded processing [47]. Appropriate OSM features are used to extract all necessary network components, including substations, transformers and power lines. Their geospatial description was cleaned in this process, and the data structure aligned with the PyPSA framework requirements.
Beyond that, to build the network, an approach has been developed to improve the quality of the OSM-extracted grid topology by accounting for a reasonable tolerance of OSM-derived coordinates.

Download: Download high-res image (924KB)
Download: Download full-size image
Fig. 2. Representation of transmission networks by Open Street Map (OSM) and shapes produced by PyPSA-Earth.

3.3. Fundamental shapes
Fundamental shapes represent the smallest defined regions that gather various data types to characterize the energy system, such as in Fig. 2 or Figure B.15 in Appendix B. Before being ready for the model-framework execution, data is often provided in many different ways, e.g. geo-referenced point locations and raster data. To properly execute the modelling, such information is gathered and aggregated at the level of the fundamental shapes. These shapes can represent either administrative zones or spatial zones generated from the grid structure as shown in Figure B.15 in Appendix B, which is in the following discussed in more detail for onshore and offshore shapes.
For onshore regions, the model provides two ways to build fundamental data shapes. The first retrieves the so-called Global Administrative Areas (GADM) that represent administrative zones at various levels of detail (e.g. national, regional, province, municipality) [48]. The second one uses the substation GIS location to create Voronoi partitioned areas for each substation, which boundary is defined as equidistant to the centroid of the nearest sites [49]. The latter approach is beneficial to replicating the network accurately, while the former helps communicate results.
For offshore regions, the model uses only Voronoi partitioned areas to create fundamental shapes. These Voronoi areas are built from high voltage onshore nodes and are limited to the offshore extent by the Maritime Boundaries and Exclusive Economic Zones (EEZ) data for each country [50].
3.4. Electricity consumption and prediction
The model currently provides globally hourly demand predictions considering ’Shared Socioeconomic Pathways’ [51] scenarios for 2030, 2040, 2050 and 2100 and weather years of 2011, 2013 and 2018. The demand time series is created using the new contributed synde package [52], which implements a workflow management system to extract the demand data created with the open-source Global-Energy GIS (GEGIS) package [29].
In principle, GEGIS produces hourly demand time series by applying machine learning methods [29] using as predictors temperature, population, GDP, industrial structure, heating, cooling technologies, among others, similarly to [53]. The observed absolute error of GEGIS in the validation test is considered acceptable for energy studies as it is 8% across 44 countries, yet with generally worse performance in low-income countries [29].
The coverage of the synde package is currently limited. Figure B.16 in Appendix B shows no data outputs for especially low-demand countries. A heuristic creates data for the countries with missing data by scaling the Nigerian demand time series proportionally to population and GDP. We validate this approach in Section 4.2.
3.5. Renewable energy sources
Renewable energy sources such as solar, wind and hydro time series are modelled with the open-source package Atlite [54]. Atlite (i) creates cutouts that define spatio-temporal boundaries, (ii) prepares cutouts, which means that environmental and weather data is added to geospatial boundaries by matching various datasets (ERA5 reanalysis data [55], SARAH-2 satellite data [56], and GEBCO bathymetry [57]), and finally, (iii) applies conversion functions to produce technology-specific spatially resolved time series and potentials [54]. Currently, the PyPSA-Earth model framework implements solar photovoltaic, on- and offshore wind turbines, hydro-runoff, reservoir and dam power resources. In the case of hydro, the runoff time series are obtained by Atlite for each powerplant location, as described in Section 3.6. As our new contribution, the hydro power output is thereby proportionally rescaled to match the total energy production of existing power plants by country [58]. At the time of writing, available in Atlite but not yet implemented in PyPSA-Earth are potentials and time series for concentrated solar power, solar thermal collectors, heat demand and dynamic line rating with a wide range of technology options. For details on the model implementation for each technology, we refer the reader to the PyPSA-Eur publication which the presented model mostly builds-upon [23]. A brief concept demonstration of Atlite is provided in Fig. 3.

Download: Download high-res image (1MB)
Download: Download full-size image
Fig. 3. A concept demonstration of Atlite for Nigeria. (a) Shows that environmental and weather data is extracted in a cutout for the region of interest. (b) The cutout is split in a raster of 
 or roughly 
 (length varies along latitude), whereby each cell contains static or hourly time series data. The example wind speed and direct irradiation influx time series are shown for one cutout cell that contains an ERA5 extract of the Copernicus Data Store [55]. (c) Shows the eligible area raster, which is built by excluding protected and reserved areas recorded in protectedplanet.net and excluding specific land-cover types from Copernicus Global Land Service whose eligibility can vary depending on the technology. (d) Illustrates the maximal installable power raster, which is calculated by the eligible area and the socio-technical power density of a technology e.g. 
 for solar photovoltaic. (e) The raster is then downsampled to the region of interest or fundamental shape by averaging the proportion of the overlapping areas. (f) Finally, by applying a PV technology model to (b) and combining it with (e) we can define per region the upper expansion limit and the maximal hourly availability constraint for a given technology.

3.6. Generators
Given the limitation of reliable datasets for power plants for the African region, the existing powerplantmatching tool [59] has been extended to include additional datasets, such as OpenStreetMap, to fine-tune the African model and validate the results with the final goal of maximizing accuracy and quality of the result.
Powerplantmatching has been successfully proposed to estimate the location and capacity of power plants in Europe. The validation performed with respect to the commercial World Electric Power Plants Database (WEPP) by Platts and the dataset by the Association of European Transmission System Operators (ENTSO-E) reaches an accuracy of around 90% using only open data [59]. By default, various open data sources are included, such as [60], ENTSO-E [61], GEO [62], and renewable statistics by IRENA [63] among others. The approach applied for powerplantmatching is based on the procedure depicted in Fig. 4 available in Appendix B, where the raw datasets are first downloaded, then filtered to remove missing or damaged data, and aggregated. Once the refined data are obtained, the datasets are pairwise compared to identify duplicated entries. Finally, non-duplicated data are merged into a unique dataset and used as a source for PyPSA-Earth. Only a few of these datasets have global scope (GEO, GPD and IRENA) and have been validated for Africa. In particular for Africa, where data is lacking, including all available open data can be critical to maximizing the accuracy of the results. Therefore, inspired by future work suggested in [64], we have extended the powerplantmatching tool to optionally include and process OpenStreetMap data to improve the quality of outputs.

Download: Download high-res image (209KB)
Download: Download full-size image
Fig. 4. Flowchart of the powerplantmatching procedure, including the novel OSM input (in bold) which was developed for PyPSA-Earth.

3.7. Spatial clustering approach
In order to tackle the computational complexity of solving a co-optimization problem of transmission and generation capacity expansion, the model offers state-of-the-art spatial clustering methods adapted from the PyPSA package and PyPSA-Eur model [3], [65]. Spatial clustering allows aggregating nodes of the system to reduce the complexity of the model, which is essential for reducing the computational needs.
The available clustering methods provide a focus on (i) conserving the representation of renewable potentials as well as the topology of the transmission grid, (ii) accurately representing the electrical parameters to improve estimates of electrical power flows in an aggregated model, (iii) aggregating spatially close nodes disregarding other a-priori information of the network, or (iv) according to their location with regards to the country’s subdivisions facilitating results interpretation for policy recommendations. An analysis of suitable clustering methods that depend on the modelling application is provided in [66].
In summary, (i) the clustering approach that focuses on a better representation of variable sources or sinks of the model is inspired by [67]. It includes variable potentials, i.e. capacity factors or full load hours for solar and wind, or the variable electricity demand as a distance metric between nodes. This is combined with a hierarchical clustering approach, similar to the suggestions provided in [68]. However, we only allow nodes to be aggregated when a physical transmission line connects them instead of assuming a synthesized grid in contrast with [68]. (ii) The clustering method that focuses on a better representation of the transmission grid was initially suggested by [69] to be applied to the case of electricity system modelling. It is a density-based hierarchical clustering operating on the line impedance. (iii) The network can also be reduced using a weighted k-means algorithm on the locations of the network nodes as explained in detail in [49]. (iv) Finally, using the GADM shapes allows aggregating all nodes in the same shape.
Any of these methods can be applied in single or two distinct iterations, as displayed in Fig. 5 for Nigeria. In each of these two iterations, a different method can be applied, choosing from (i)-(iv). In the first iteration, all nodes are clustered to a desired number of representative nodes, aggregating generators, flexibility options (electricity storage and transmission lines) and electrical demand. The second iteration is optional and allows the remaining nodes to be clustered again. However, now only the transmission network is effectively reduced such that the representation of renewable resources is fixed to the resolution of the previous iteration (compare the first row and second row of Fig. 5). The spatial resolution of the transmission network must always be larger or equal to the resource resolution, i.e. the clustering of the first iteration sets an upper bound.

Download: Download high-res image (740KB)
Download: Download full-size image
Fig. 5. Illustration of the clustering methodology applied for the transmission network (red nodes and edges) and resource resolution (grey nodes and edges). In the first row, we show how nodal data (i.e. generators, storage units, electrical loads etc.) is aggregated in tandem with the resolution of the transmission network. Three exemplary resolutions of the network for Nigeria are displayed here: 4, 14 and 54 nodes from left to right. The second row shows how the clustering also allows modelling the transmission grid at a different resolution than the resources. In this example, the transmission network contains 4 nodes connected by 4 lines (all in red) at every resolution, while 4, 14 and 54 generation sites become available (left to right). The background colour represents exemplary capacity factors in shades of red, for an arbitrary technology. The darker the colour, the higher the capacity factor.

3.8. Augmented line connection
The African network is often not well interconnected. This is due to isolated national planning data or the presence of isolated mini-grids that are popular electrification measures [70]. Therefore, we propose an algorithm to mesh a given network and assess different grades of connectivity. To investigate the benefits of meshed networks, PyPSA-Earth can perform a k-edge augmentation algorithm that guarantees every node has a modifiable number of connections to other nodes. Only if nodes do not already fulfil the connectivity condition, the algorithm will create new lines to the nearest neighbour by a minimum spanning tree. The new ‘augmented’ lines can be set to an insignificant size (e.g. 1 MW) to create new options for line expansion in the investment optimization. For example, Figure B.14 in Appendix B compares between the standard clustered network with 420 nodes and its augmented version. Only the model that includes augmented line connections can explore an interconnected continent.
3.9. Model framework and solver interface
The PyPSA-Earth model integrates the PyPSA model framework with its solver interfaces to perform planning studies; details on the mathematical modelling are provided in Appendix A for the sake of brevity. Using PyPSA has several benefits compared to other tools that are briefly introduced in the following. First, PyPSA enables large-scale optimization in Python. Python is well known for being user-friendly, but when analysing the memory consumption and speed for building optimization problems, it was considered non-competitive compared to tools based on the programming language Julia or C++ [71] – a bottleneck which also hinders large-scale optimization required for PyPSA-Earth. As a reaction, developers in the PyPSA ecosystem built nomopyomo overcoming the bottlenecks [5]. More recently, the same group has been working on a general package called Linopy that promises a 4–6 runtime speed up and a 50% improvement in memory consumption compared to the optimization problem formulator Pyomo, possibly making it also more memory efficient than the Julia alternative JuMP as indicated in [71]. Another point making the PyPSA dependency attractive is that it is one of the most popular tools, as suggested by GitHub stars in the GPST benchmark [72], possibly due to its standard component objects and the continuously maintained documentation [34]. Finally, the framework offers several solver interfaces (HiGHS, Cbc, GLPK, Gurobi, among others), providing flexibility in solving various optimization problems with open-source and proprietary solutions.